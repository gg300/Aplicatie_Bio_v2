<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>